# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  test-build:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 8.x.x

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Test
        run: pnpm run test

      - name: Lint
        run: pnpm lint:fix

      - name: Format Check
        run: pnpm format

      - name: Type Check
        run: pnpm typecheck

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5

      - name: Build
        run: pnpm run build

  auto-merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Wait for checks to pass
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-checks
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'test-build' 
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Merge PR
        if: ${{ steps.wait-for-checks.outputs.conclusion == 'success' }}
        run: gh pr merge --auto --squash ${{ github.event.pull_request.html_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}