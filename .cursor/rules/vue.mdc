---
description: Coding rules about Vue
globs: app/**/*.vue
alwaysApply: false
---
# Vue 3 Specifics

- In SFC file, define each section in order: `<script>`, `<template>`, `<style>`.
- In SFC file, add JSDoc at the top of `<script>` section to explain the component.
- Use `defineModel` for v-model bindings.
- Add JSDoc for `defineModel` variables to explain the purpose.
- Avoid using index for `key` attribute when using `v-for`.
- Prefer `v-show` over `v-if` for conditional visibility.
- Use `useTemplateRef` introduced in Vue 3.5 when you need a template reference.
- Define prop types by specifying `defineProps` generic rather than `Props` type. For example, `defineProps<{ level: number }>()`.
- Define emit types by specifying `defineEmits` generic rather than `Emits` type. For example, `defineEmits<{ (e: 'close'): void }>()`.
- Prefer type-only emit declarations introduced in Vue 3.3. For example, `defineEmits<{ change: [id: number] }>()`.
- Always add JSDoc to component props and emits.
- For a reactive variable, use `undefined` over `null` if the default value is not known.

# Nuxt 3 Specifics

- Use explicit imports. Don't rely on Nuxt auto imports.
- Take advantage of VueUse functions to enhance reactivity and performance.
- Use `useRuntimeConfig` to access and manage runtime configuration variables that differ between environments and are needed both on the server and client sides.
- Pass an object to `navigateTo` for better type safety. For example, `navigateTo({ name: 'about' })` instead of `navigateTo('/about')`.
- Pass an object to `<NuxtLink :to>` for better type safety. For example, `<NuxtLink :to="{ name: 'about' }">`.

# HTML

- Specify `type` attribute for `<button>` elements.

# CSS

- Use modern CSS features as much as possible, assuming users always use the latest browser versions.
- Use logical properties. For example, Use `inline-size` over `width`.
- Use OKLCH when defining colors.
- Use `translate`, `rotate`, `scale` ((Individual transform properties)) individually over `transform` shorthand.
